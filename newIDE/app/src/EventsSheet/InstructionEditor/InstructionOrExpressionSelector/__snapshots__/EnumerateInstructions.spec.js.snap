// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EnumerateInstructions can create the tree of instructions 1`] = `
Object {
  "AdMob banners and interstitial screens": Object {
    "Banner is displayed": Object {
      "displayedName": "Banner is displayed",
      "fullGroupName": "AdMob banners and interstitial screens/",
      "type": "AdMobObject::BannerDisplayed",
    },
    "Interstitial screen is ready": Object {
      "displayedName": "Interstitial screen is ready",
      "fullGroupName": "AdMob banners and interstitial screens/",
      "type": "AdMobObject::InterstitialReady",
    },
  },
  "Advanced": Object {
    "And": Object {
      "displayedName": "And",
      "fullGroupName": "Advanced",
      "type": "BuiltinCommonInstructions::And",
    },
    "Not": Object {
      "displayedName": "Not",
      "fullGroupName": "Advanced",
      "type": "BuiltinCommonInstructions::Not",
    },
    "Or": Object {
      "displayedName": "Or",
      "fullGroupName": "Advanced",
      "type": "BuiltinCommonInstructions::Or",
    },
    "Trigger once while true": Object {
      "displayedName": "Trigger once while true",
      "fullGroupName": "Advanced",
      "type": "BuiltinCommonInstructions::Once",
    },
  },
  "Audio": Object {
    "Global volume": Object {
      "displayedName": "Global volume",
      "fullGroupName": "Audio",
      "type": "GlobalVolume",
    },
    "Music on channels": Object {
      "A music file is being played": Object {
        "displayedName": "A music file is being played",
        "fullGroupName": "Audio/Music on channels",
        "type": "MusicPlaying",
      },
      "A music file is paused": Object {
        "displayedName": "A music file is paused",
        "fullGroupName": "Audio/Music on channels",
        "type": "MusicPaused",
      },
      "A music file is stopped": Object {
        "displayedName": "A music file is stopped",
        "fullGroupName": "Audio/Music on channels",
        "type": "MusicStopped",
      },
      "Pitch of the music on a channel": Object {
        "displayedName": "Pitch of the music on a channel",
        "fullGroupName": "Audio/Music on channels",
        "type": "MusicChannelPitch",
      },
      "Playing offset of the music on a channel": Object {
        "displayedName": "Playing offset of the music on a channel",
        "fullGroupName": "Audio/Music on channels",
        "type": "MusicChannelPlayingOffset",
      },
      "Volume of the music on a channel": Object {
        "displayedName": "Volume of the music on a channel",
        "fullGroupName": "Audio/Music on channels",
        "type": "MusicCanalVolume",
      },
    },
    "Sounds on channels": Object {
      "A sound is being played": Object {
        "displayedName": "A sound is being played",
        "fullGroupName": "Audio/Sounds on channels",
        "type": "SoundPlaying",
      },
      "A sound is paused": Object {
        "displayedName": "A sound is paused",
        "fullGroupName": "Audio/Sounds on channels",
        "type": "SoundPaused",
      },
      "A sound is stopped": Object {
        "displayedName": "A sound is stopped",
        "fullGroupName": "Audio/Sounds on channels",
        "type": "SoundStopped",
      },
      "Pitch of the sound of a channel": Object {
        "displayedName": "Pitch of the sound of a channel",
        "fullGroupName": "Audio/Sounds on channels",
        "type": "SoundChannelPitch",
      },
      "Playing offset of the sound on a channel": Object {
        "displayedName": "Playing offset of the sound on a channel",
        "fullGroupName": "Audio/Sounds on channels",
        "type": "SoundChannelPlayingOffset",
      },
      "Volume of the sound on a channel": Object {
        "displayedName": "Volume of the sound on a channel",
        "fullGroupName": "Audio/Sounds on channels",
        "type": "SoundCanalVolume",
      },
    },
  },
  "Common conditions for all objects": Object {
    "Angle": Object {
      "An object is turned toward another": Object {
        "displayedName": "An object is turned toward another",
        "fullGroupName": "Common conditions for all objects/Angle",
        "type": "EstTourne",
      },
      "Angle": Object {
        "displayedName": "Angle",
        "fullGroupName": "Common conditions for all objects/Angle",
        "type": "Angle",
      },
    },
    "Behaviors": Object {
      "Behavior activated": Object {
        "displayedName": "Behavior activated",
        "fullGroupName": "Common conditions for all objects/Behaviors",
        "type": "BehaviorActivated",
      },
    },
    "Collision": Object {
      "Collision": Object {
        "displayedName": "Collision",
        "fullGroupName": "Common conditions for all objects/Collision",
        "type": "CollisionNP",
      },
      "Point inside object": Object {
        "displayedName": "Point inside object",
        "fullGroupName": "Common conditions for all objects/Collision",
        "type": "CollisionPoint",
      },
    },
    "Layer": Object {
      "Compare layer": Object {
        "displayedName": "Compare layer",
        "fullGroupName": "Common conditions for all objects/Layer",
        "type": "Layer",
      },
    },
    "Movement": Object {
      "An object is moving toward another": Object {
        "displayedName": "An object is moving toward another",
        "fullGroupName": "Common conditions for all objects/Movement",
        "type": "SeDirige",
      },
      "Angle of movement": Object {
        "displayedName": "Angle of movement",
        "fullGroupName": "Common conditions for all objects/Movement",
        "type": "AngleOfDisplacement",
      },
      "Object is stopped": Object {
        "displayedName": "Object is stopped",
        "fullGroupName": "Common conditions for all objects/Movement",
        "type": "Arret",
      },
      "Speed": Object {
        "displayedName": "Speed",
        "fullGroupName": "Common conditions for all objects/Movement",
        "type": "Vitesse",
      },
    },
    "Objects": Object {
      "Objects count": Object {
        "displayedName": "Objects count",
        "fullGroupName": "Common conditions for all objects/Objects",
        "type": "NbObjet",
      },
      "Pick a random object": Object {
        "displayedName": "Pick a random object",
        "fullGroupName": "Common conditions for all objects/Objects",
        "type": "AjoutHasard",
      },
      "Pick all objects": Object {
        "displayedName": "Pick all objects",
        "fullGroupName": "Common conditions for all objects/Objects",
        "type": "AjoutObjConcern",
      },
      "Pick nearest object": Object {
        "displayedName": "Pick nearest object",
        "fullGroupName": "Common conditions for all objects/Objects",
        "type": "PickNearest",
      },
    },
    "Position": Object {
      "Compare X position of an object": Object {
        "displayedName": "Compare X position of an object",
        "fullGroupName": "Common conditions for all objects/Position",
        "type": "PosX",
      },
      "Compare Y position of an object": Object {
        "displayedName": "Compare Y position of an object",
        "fullGroupName": "Common conditions for all objects/Position",
        "type": "PosY",
      },
      "Distance between two objects": Object {
        "displayedName": "Distance between two objects",
        "fullGroupName": "Common conditions for all objects/Position",
        "type": "Distance",
      },
    },
    "Variables": Object {
      "Structures": Object {
        "Child existence": Object {
          "displayedName": "Child existence",
          "fullGroupName": "Common conditions for all objects/Variables/Structures",
          "type": "ObjectVariableChildExists",
        },
      },
      "Text of an object's variable": Object {
        "displayedName": "Text of an object's variable",
        "fullGroupName": "Common conditions for all objects/Variables",
        "type": "VarObjetTxt",
      },
      "Value of an object's variable": Object {
        "displayedName": "Value of an object's variable",
        "fullGroupName": "Common conditions for all objects/Variables",
        "type": "VarObjet",
      },
    },
    "Visibility": Object {
      "Visibility of an object": Object {
        "displayedName": "Visibility of an object",
        "fullGroupName": "Common conditions for all objects/Visibility",
        "type": "Visible",
      },
    },
    "Z order": Object {
      "Compare Z order": Object {
        "displayedName": "Compare Z order",
        "fullGroupName": "Common conditions for all objects/Z order",
        "type": "Plan",
      },
    },
  },
  "Destroy Outside Screen Behavior": Object {
    "Additional border": Object {
      "displayedName": "Additional border",
      "fullGroupName": "Destroy Outside Screen Behavior/",
      "type": "DestroyOutsideBehavior::ExtraBorder",
    },
  },
  "Draggable Behavior": Object {
    "Being dragged": Object {
      "displayedName": "Being dragged",
      "fullGroupName": "Draggable Behavior/",
      "type": "DraggableBehavior::Dragged",
    },
  },
  "Inventories": Object {
    "Has an item": Object {
      "displayedName": "Has an item",
      "fullGroupName": "Inventories",
      "type": "Inventory::Has",
    },
    "Item count": Object {
      "displayedName": "Item count",
      "fullGroupName": "Inventories",
      "type": "Inventory::Count",
    },
    "Item equipped": Object {
      "displayedName": "Item equipped",
      "fullGroupName": "Inventories",
      "type": "Inventory::IsEquipped",
    },
    "Item full": Object {
      "displayedName": "Item full",
      "fullGroupName": "Inventories",
      "type": "Inventory::IsFull",
    },
  },
  "Keyboard": Object {
    "Any key pressed": Object {
      "displayedName": "Any key pressed",
      "fullGroupName": "Keyboard",
      "type": "AnyKeyPressed",
    },
    "Key pressed": Object {
      "displayedName": "Key pressed",
      "fullGroupName": "Keyboard",
      "type": "KeyPressed",
    },
    "Key pressed (text expression)": Object {
      "displayedName": "Key pressed (text expression)",
      "fullGroupName": "Keyboard",
      "type": "KeyFromTextPressed",
    },
    "Key released": Object {
      "displayedName": "Key released",
      "fullGroupName": "Keyboard",
      "type": "KeyReleased",
    },
    "Key released (text expression)": Object {
      "displayedName": "Key released (text expression)",
      "fullGroupName": "Keyboard",
      "type": "KeyFromTextReleased",
    },
  },
  "Layers and cameras": Object {
    "Angle of a camera of a layer": Object {
      "displayedName": "Angle of a camera of a layer",
      "fullGroupName": "Layers and cameras",
      "type": "CameraAngle",
    },
    "Camera center X position": Object {
      "displayedName": "Camera center X position",
      "fullGroupName": "Layers and cameras",
      "type": "CameraX",
    },
    "Camera center Y position": Object {
      "displayedName": "Camera center Y position",
      "fullGroupName": "Layers and cameras",
      "type": "CameraY",
    },
    "Height of a camera": Object {
      "displayedName": "Height of a camera",
      "fullGroupName": "Layers and cameras",
      "type": "CameraHeight",
    },
    "Time": Object {
      "Layer time scale": Object {
        "displayedName": "Layer time scale",
        "fullGroupName": "Layers and cameras/Time",
        "type": "LayerTimeScale",
      },
    },
    "Visibility of a layer": Object {
      "displayedName": "Visibility of a layer",
      "fullGroupName": "Layers and cameras",
      "type": "LayerVisible",
    },
    "Width of a camera": Object {
      "displayedName": "Width of a camera",
      "fullGroupName": "Layers and cameras",
      "type": "CameraWidth",
    },
  },
  "Linked objects": Object {
    "Take into account linked objects": Object {
      "displayedName": "Take into account linked objects",
      "fullGroupName": "Linked objects",
      "type": "LinkedObjects::PickObjectsLinkedTo",
    },
  },
  "Mouse and touch": Object {
    "Cursor X position": Object {
      "displayedName": "Cursor X position",
      "fullGroupName": "Mouse and touch",
      "type": "SourisX",
    },
    "Cursor Y position": Object {
      "displayedName": "Cursor Y position",
      "fullGroupName": "Mouse and touch",
      "type": "SourisY",
    },
    "Mouse button pressed or touch held": Object {
      "displayedName": "Mouse button pressed or touch held",
      "fullGroupName": "Mouse and touch",
      "type": "SourisBouton",
    },
    "Mouse button released": Object {
      "displayedName": "Mouse button released",
      "fullGroupName": "Mouse and touch",
      "type": "MouseButtonReleased",
    },
    "Multitouch": Object {
      "A new touch has started": Object {
        "displayedName": "A new touch has started",
        "fullGroupName": "Mouse and touch/Multitouch",
        "type": "PopStartedTouch",
      },
      "A touch has ended": Object {
        "displayedName": "A touch has ended",
        "fullGroupName": "Mouse and touch/Multitouch",
        "type": "PopEndedTouch",
      },
      "Touch X position": Object {
        "displayedName": "Touch X position",
        "fullGroupName": "Mouse and touch/Multitouch",
        "type": "TouchX",
      },
      "Touch Y position": Object {
        "displayedName": "Touch Y position",
        "fullGroupName": "Mouse and touch/Multitouch",
        "type": "TouchY",
      },
    },
    "The cursor/touch is on an object": Object {
      "displayedName": "The cursor/touch is on an object",
      "fullGroupName": "Mouse and touch",
      "type": "SourisSurObjet",
    },
  },
  "Other": Object {
    "Always": Object {
      "displayedName": "Always",
      "fullGroupName": "Other",
      "type": "Toujours",
    },
    "Compare two expressions": Object {
      "displayedName": "Compare two expressions",
      "fullGroupName": "Other",
      "type": "Egal",
    },
  },
  "Panel Sprite (9-patch) Object": Object {
    "Size and angle": Object {
      "Height": Object {
        "displayedName": "Height",
        "fullGroupName": "Panel Sprite (9-patch) Object/Size and angle",
        "type": "PanelSpriteObject::Height",
      },
      "Width": Object {
        "displayedName": "Width",
        "fullGroupName": "Panel Sprite (9-patch) Object/Size and angle",
        "type": "PanelSpriteObject::Width",
      },
    },
  },
  "Platform Behavior": Object {
    "Is falling": Object {
      "displayedName": "Is falling",
      "fullGroupName": "Platform Behavior/",
      "type": "PlatformBehavior::IsFalling",
    },
    "Is grabbing platform ledge": Object {
      "displayedName": "Is grabbing platform ledge",
      "fullGroupName": "Platform Behavior/",
      "type": "PlatformBehavior::IsGrabbingPlatform",
    },
    "Is jumping": Object {
      "displayedName": "Is jumping",
      "fullGroupName": "Platform Behavior/",
      "type": "PlatformBehavior::IsJumping",
    },
    "Is moving": Object {
      "displayedName": "Is moving",
      "fullGroupName": "Platform Behavior/",
      "type": "PlatformBehavior::IsMoving",
    },
    "Is on floor": Object {
      "displayedName": "Is on floor",
      "fullGroupName": "Platform Behavior/",
      "type": "PlatformBehavior::IsOnFloor",
    },
    "Is on ladder": Object {
      "displayedName": "Is on ladder",
      "fullGroupName": "Platform Behavior/",
      "type": "PlatformBehavior::IsOnLadder",
    },
    "Options": Object {
      "Acceleration": Object {
        "displayedName": "Acceleration",
        "fullGroupName": "Platform Behavior/Options",
        "type": "PlatformBehavior::Acceleration",
      },
      "Deceleration": Object {
        "displayedName": "Deceleration",
        "fullGroupName": "Platform Behavior/Options",
        "type": "PlatformBehavior::Deceleration",
      },
      "Gravity": Object {
        "displayedName": "Gravity",
        "fullGroupName": "Platform Behavior/Options",
        "type": "PlatformBehavior::Gravity",
      },
      "Jump speed": Object {
        "displayedName": "Jump speed",
        "fullGroupName": "Platform Behavior/Options",
        "type": "PlatformBehavior::JumpSpeed",
      },
      "Maximum falling speed": Object {
        "displayedName": "Maximum falling speed",
        "fullGroupName": "Platform Behavior/Options",
        "type": "PlatformBehavior::MaxFallingSpeed",
      },
      "Maximum speed": Object {
        "displayedName": "Maximum speed",
        "fullGroupName": "Platform Behavior/Options",
        "type": "PlatformBehavior::MaxSpeed",
      },
    },
  },
  "Primitive drawing": Object {
    "Setup": Object {
      "Fill opacity": Object {
        "displayedName": "Fill opacity",
        "fullGroupName": "Primitive drawing/Setup",
        "type": "PrimitiveDrawing::FillOpacity",
      },
      "Outline opacity": Object {
        "displayedName": "Outline opacity",
        "fullGroupName": "Primitive drawing/Setup",
        "type": "PrimitiveDrawing::OutlineOpacity",
      },
      "Outline size": Object {
        "displayedName": "Outline size",
        "fullGroupName": "Primitive drawing/Setup",
        "type": "PrimitiveDrawing::OutlineSize",
      },
    },
  },
  "Scene": Object {
    "At the beginning of the scene": Object {
      "displayedName": "At the beginning of the scene",
      "fullGroupName": "Scene",
      "type": "DepartScene",
    },
  },
  "Sprite": Object {
    "Animations and images": Object {
      "Animation finished": Object {
        "displayedName": "Animation finished",
        "fullGroupName": "Sprite/Animations and images",
        "type": "AnimationEnded",
      },
      "Animation paused": Object {
        "displayedName": "Animation paused",
        "fullGroupName": "Sprite/Animations and images",
        "type": "AnimStopped",
      },
      "Current animation": Object {
        "displayedName": "Current animation",
        "fullGroupName": "Sprite/Animations and images",
        "type": "Animation",
      },
      "Current animation name": Object {
        "displayedName": "Current animation name",
        "fullGroupName": "Sprite/Animations and images",
        "type": "AnimationName",
      },
      "Current frame": Object {
        "displayedName": "Current frame",
        "fullGroupName": "Sprite/Animations and images",
        "type": "Sprite",
      },
    },
    "Collision": Object {
      "Collision (Pixel perfect)": Object {
        "displayedName": "Collision (Pixel perfect)",
        "fullGroupName": "Sprite/Collision",
        "type": "Collision",
      },
    },
    "Direction": Object {
      "Current direction": Object {
        "displayedName": "Current direction",
        "fullGroupName": "Sprite/Direction",
        "type": "Direction",
      },
    },
    "Effects": Object {
      "Blend mode": Object {
        "displayedName": "Blend mode",
        "fullGroupName": "Sprite/Effects",
        "type": "BlendMode",
      },
      "Horizontally flipped": Object {
        "displayedName": "Horizontally flipped",
        "fullGroupName": "Sprite/Effects",
        "type": "FlippedX",
      },
      "Vertically flipped": Object {
        "displayedName": "Vertically flipped",
        "fullGroupName": "Sprite/Effects",
        "type": "FlippedY",
      },
    },
    "Size": Object {
      "Scale on X axis": Object {
        "displayedName": "Scale on X axis",
        "fullGroupName": "Sprite/Size",
        "type": "ScaleWidth",
      },
      "Scale on Y axis": Object {
        "displayedName": "Scale on Y axis",
        "fullGroupName": "Sprite/Size",
        "type": "ScaleHeight",
      },
    },
    "Visibility": Object {
      "Opacity": Object {
        "displayedName": "Opacity",
        "fullGroupName": "Sprite/Visibility",
        "type": "Opacity",
      },
    },
  },
  "Storage": Object {
    "Existence of a group": Object {
      "displayedName": "Existence of a group",
      "fullGroupName": "Storage",
      "type": "GroupExists",
    },
  },
  "System information": Object {
    "Is a mobile device": Object {
      "displayedName": "Is a mobile device",
      "fullGroupName": "System information",
      "type": "SystemInfo::IsMobile",
    },
  },
  "Text entry object": Object {
    "Setup": Object {
      "Text input": Object {
        "displayedName": "Text input",
        "fullGroupName": "Text entry object/Setup",
        "type": "TextEntryObject::Activated",
      },
    },
    "Text in memory": Object {
      "displayedName": "Text in memory",
      "fullGroupName": "Text entry object/",
      "type": "TextEntryObject::String",
    },
  },
  "Text object": Object {
    "Compare the text": Object {
      "displayedName": "Compare the text",
      "fullGroupName": "Text object/",
      "type": "TextObject::String",
    },
    "Opacity": Object {
      "displayedName": "Opacity",
      "fullGroupName": "Text object/",
      "type": "TextObject::Opacity",
    },
    "Rotation": Object {
      "Angle": Object {
        "displayedName": "Angle",
        "fullGroupName": "Text object/Rotation",
        "type": "TextObject::Angle",
      },
    },
    "Size": Object {
      "displayedName": "Size",
      "fullGroupName": "Text object/",
      "type": "TextObject::Size",
    },
    "Style": Object {
      "Bold": Object {
        "displayedName": "Bold",
        "fullGroupName": "Text object/Style",
        "type": "TextObject::IsBold",
      },
      "Italic": Object {
        "displayedName": "Italic",
        "fullGroupName": "Text object/Style",
        "type": "TextObject::IsItalic",
      },
    },
  },
  "Tiled Sprite Object": Object {
    "Image offset": Object {
      "Image X Offset": Object {
        "displayedName": "Image X Offset",
        "fullGroupName": "Tiled Sprite Object/Image offset",
        "type": "TiledSpriteObject::XOffset",
      },
      "Image Y Offset": Object {
        "displayedName": "Image Y Offset",
        "fullGroupName": "Tiled Sprite Object/Image offset",
        "type": "TiledSpriteObject::YOffset",
      },
    },
    "Size and angle": Object {
      "Height": Object {
        "displayedName": "Height",
        "fullGroupName": "Tiled Sprite Object/Size and angle",
        "type": "TiledSpriteObject::Height",
      },
      "Width": Object {
        "displayedName": "Width",
        "fullGroupName": "Tiled Sprite Object/Size and angle",
        "type": "TiledSpriteObject::Width",
      },
    },
  },
  "Timers and time": Object {
    "State of a timer": Object {
      "displayedName": "State of a timer",
      "fullGroupName": "Timers and time",
      "type": "TimerPaused",
    },
    "Time scale": Object {
      "displayedName": "Time scale",
      "fullGroupName": "Timers and time",
      "type": "TimeScale",
    },
    "Value of a timer": Object {
      "displayedName": "Value of a timer",
      "fullGroupName": "Timers and time",
      "type": "Timer",
    },
  },
  "Top-down movement": Object {
    "Is moving": Object {
      "displayedName": "Is moving",
      "fullGroupName": "Top-down movement/",
      "type": "TopDownMovementBehavior::IsMoving",
    },
    "Movement": Object {
      "Acceleration": Object {
        "displayedName": "Acceleration",
        "fullGroupName": "Top-down movement/Movement",
        "type": "TopDownMovementBehavior::Acceleration",
      },
      "Angular maximum speed": Object {
        "displayedName": "Angular maximum speed",
        "fullGroupName": "Top-down movement/Movement",
        "type": "TopDownMovementBehavior::AngularMaxSpeed",
      },
      "Deceleration": Object {
        "displayedName": "Deceleration",
        "fullGroupName": "Top-down movement/Movement",
        "type": "TopDownMovementBehavior::Deceleration",
      },
      "Diagonals moves": Object {
        "displayedName": "Diagonals moves",
        "fullGroupName": "Top-down movement/Movement",
        "type": "TopDownMovementBehavior::DiagonalsAllowed",
      },
      "Maximum speed": Object {
        "displayedName": "Maximum speed",
        "fullGroupName": "Top-down movement/Movement",
        "type": "TopDownMovementBehavior::MaxSpeed",
      },
      "Object rotated": Object {
        "displayedName": "Object rotated",
        "fullGroupName": "Top-down movement/Movement",
        "type": "TopDownMovementBehavior::ObjectRotated",
      },
      "Rotation offset": Object {
        "displayedName": "Rotation offset",
        "fullGroupName": "Top-down movement/Movement",
        "type": "TopDownMovementBehavior::AngleOffset",
      },
      "Speed": Object {
        "displayedName": "Speed",
        "fullGroupName": "Top-down movement/Movement",
        "type": "TopDownMovementBehavior::Speed",
      },
    },
  },
  "Variables": Object {
    "Global variables": Object {
      "Structures": Object {
        "Child existence": Object {
          "displayedName": "Child existence",
          "fullGroupName": "Variables/Global variables/Structures",
          "type": "GlobalVariableChildExists",
        },
      },
      "Text of a global variable": Object {
        "displayedName": "Text of a global variable",
        "fullGroupName": "Variables/Global variables",
        "type": "VarGlobalTxt",
      },
      "Value of a global variable": Object {
        "displayedName": "Value of a global variable",
        "fullGroupName": "Variables/Global variables",
        "type": "VarGlobal",
      },
    },
    "Structures": Object {
      "Child existence": Object {
        "displayedName": "Child existence",
        "fullGroupName": "Variables/Structures",
        "type": "VariableChildExists",
      },
    },
    "Text of a variable": Object {
      "displayedName": "Text of a variable",
      "fullGroupName": "Variables",
      "type": "VarSceneTxt",
    },
    "Value of a variable": Object {
      "displayedName": "Value of a variable",
      "fullGroupName": "Variables",
      "type": "VarScene",
    },
  },
}
`;

exports[`EnumerateInstructions can enumerate instructions being actions 1`] = `
Array [
  Object {
    "displayedName": "Pick a random object",
    "fullGroupName": "Common action for all objects/Objects",
    "type": "AjoutHasard",
  },
  Object {
    "displayedName": "Pick all objects",
    "fullGroupName": "Common action for all objects/Objects",
    "type": "AjoutObjConcern",
  },
  Object {
    "displayedName": "Create an object",
    "fullGroupName": "Common action for all objects/Objects",
    "type": "Create",
  },
  Object {
    "displayedName": "Create an object from its name",
    "fullGroupName": "Common action for all objects/Objects",
    "type": "CreateByName",
  },
  Object {
    "displayedName": "Apply movement to all objects",
    "fullGroupName": "Common action for all objects/Movement",
    "type": "MoveObjects",
  },
  Object {
    "displayedName": "De/activate a behavior",
    "fullGroupName": "Common action for all objects/Behaviors",
    "type": "ActivateBehavior",
  },
  Object {
    "displayedName": "Add a force (angle)",
    "fullGroupName": "Common action for all objects/Movement",
    "type": "AddForceAL",
  },
  Object {
    "displayedName": "Add a force to move toward an object",
    "fullGroupName": "Common action for all objects/Movement",
    "type": "AddForceVers",
  },
  Object {
    "displayedName": "Add a force to move toward a position",
    "fullGroupName": "Common action for all objects/Movement",
    "type": "AddForceVersPos",
  },
  Object {
    "displayedName": "Add a force",
    "fullGroupName": "Common action for all objects/Movement",
    "type": "AddForceXY",
  },
  Object {
    "displayedName": "Stop the object",
    "fullGroupName": "Common action for all objects/Movement",
    "type": "Arreter",
  },
  Object {
    "displayedName": "Hide",
    "fullGroupName": "Common action for all objects/Visibility",
    "type": "Cache",
  },
  Object {
    "displayedName": "Layer",
    "fullGroupName": "Common action for all objects/Layers and cameras",
    "type": "ChangeLayer",
  },
  Object {
    "displayedName": "Z order",
    "fullGroupName": "Common action for all objects/Z order",
    "type": "ChangePlan",
  },
  Object {
    "displayedName": "Delete an object",
    "fullGroupName": "Common action for all objects/Objects",
    "type": "Delete",
  },
  Object {
    "displayedName": "Put an object around another",
    "fullGroupName": "Common action for all objects/Position",
    "type": "MettreAutour",
  },
  Object {
    "displayedName": "Put an object around a position",
    "fullGroupName": "Common action for all objects/Position",
    "type": "MettreAutourPos",
  },
  Object {
    "displayedName": "X position of an object",
    "fullGroupName": "Common action for all objects/Position",
    "type": "MettreX",
  },
  Object {
    "displayedName": "Position of an object",
    "fullGroupName": "Common action for all objects/Position",
    "type": "MettreXY",
  },
  Object {
    "displayedName": "Y position of an object",
    "fullGroupName": "Common action for all objects/Position",
    "type": "MettreY",
  },
  Object {
    "displayedName": "Modify a variable of an object",
    "fullGroupName": "Common action for all objects/Variables",
    "type": "ModVarObjet",
  },
  Object {
    "displayedName": "Modify the text of a variable of an object",
    "fullGroupName": "Common action for all objects/Variables",
    "type": "ModVarObjetTxt",
  },
  Object {
    "displayedName": "Show",
    "fullGroupName": "Common action for all objects/Visibility",
    "type": "Montre",
  },
  Object {
    "displayedName": "Clear variable",
    "fullGroupName": "Common action for all objects/Variables/Structure",
    "type": "ObjectVariableClearChildren",
  },
  Object {
    "displayedName": "Remove a child",
    "fullGroupName": "Common action for all objects/Variables/Structure",
    "type": "ObjectVariableRemoveChild",
  },
  Object {
    "displayedName": "Rotate",
    "fullGroupName": "Common action for all objects/Angle",
    "type": "Rotate",
  },
  Object {
    "displayedName": "Rotate toward angle",
    "fullGroupName": "Common action for all objects/Angle",
    "type": "RotateTowardAngle",
  },
  Object {
    "displayedName": "Rotate toward position",
    "fullGroupName": "Common action for all objects/Angle",
    "type": "RotateTowardPosition",
  },
  Object {
    "displayedName": "Separate two objects",
    "fullGroupName": "Common action for all objects/Position",
    "type": "SeparateFromObjects",
  },
  Object {
    "displayedName": "Angle",
    "fullGroupName": "Common action for all objects/Angle",
    "type": "SetAngle",
  },
  Object {
    "displayedName": "Change the animation",
    "fullGroupName": "Sprite/Animations and images",
    "type": "ChangeAnimation",
  },
  Object {
    "displayedName": "Animation speed scale",
    "fullGroupName": "Sprite/Animations and images",
    "type": "ChangeAnimationSpeedScale",
  },
  Object {
    "displayedName": "Blend mode",
    "fullGroupName": "Sprite/Effects",
    "type": "ChangeBlendMode",
  },
  Object {
    "displayedName": "Global color",
    "fullGroupName": "Sprite/Effects",
    "type": "ChangeColor",
  },
  Object {
    "displayedName": "Change the direction",
    "fullGroupName": "Sprite/Direction",
    "type": "ChangeDirection",
  },
  Object {
    "displayedName": "Scale",
    "fullGroupName": "Sprite/Size",
    "type": "ChangeScale",
  },
  Object {
    "displayedName": "Scale on Y axis",
    "fullGroupName": "Sprite/Size",
    "type": "ChangeScaleHeight",
  },
  Object {
    "displayedName": "Scale on X axis",
    "fullGroupName": "Sprite/Size",
    "type": "ChangeScaleWidth",
  },
  Object {
    "displayedName": "Current frame",
    "fullGroupName": "Sprite/Animations and images",
    "type": "ChangeSprite",
  },
  Object {
    "displayedName": "Flip the object horizontally",
    "fullGroupName": "Sprite/Effects",
    "type": "FlipX",
  },
  Object {
    "displayedName": "Flip the object vertically",
    "fullGroupName": "Sprite/Effects",
    "type": "FlipY",
  },
  Object {
    "displayedName": "Change object's opacity",
    "fullGroupName": "Sprite/Visibility",
    "type": "Opacity",
  },
  Object {
    "displayedName": "Pause the animation",
    "fullGroupName": "Sprite/Animations and images",
    "type": "PauseAnimation",
  },
  Object {
    "displayedName": "Play the animation",
    "fullGroupName": "Sprite/Animations and images",
    "type": "PlayAnimation",
  },
  Object {
    "displayedName": "Change the animation (by name)",
    "fullGroupName": "Sprite/Animations and images",
    "type": "SetAnimationName",
  },
  Object {
    "displayedName": "Clear global variable",
    "fullGroupName": "Variables/Global variables/Structure",
    "type": "GlobalVariableClearChildren",
  },
  Object {
    "displayedName": "Remove a child",
    "fullGroupName": "Variables/Global variables/Structure",
    "type": "GlobalVariableRemoveChild",
  },
  Object {
    "displayedName": "Value of a global variable",
    "fullGroupName": "Variables/Global variables",
    "type": "ModVarGlobal",
  },
  Object {
    "displayedName": "String of a global variable",
    "fullGroupName": "Variables/Global variables",
    "type": "ModVarGlobalTxt",
  },
  Object {
    "displayedName": "Value of a variable",
    "fullGroupName": "Variables",
    "type": "ModVarScene",
  },
  Object {
    "displayedName": "String of a variable",
    "fullGroupName": "Variables",
    "type": "ModVarSceneTxt",
  },
  Object {
    "displayedName": "Clear variable",
    "fullGroupName": "Variables/Structure",
    "type": "VariableClearChildren",
  },
  Object {
    "displayedName": "Remove a child",
    "fullGroupName": "Variables/Structure",
    "type": "VariableRemoveChild",
  },
  Object {
    "displayedName": "Hide the cursor",
    "fullGroupName": "Mouse and touch",
    "type": "CacheSouris",
  },
  Object {
    "displayedName": "Show the cursor",
    "fullGroupName": "Mouse and touch",
    "type": "MontreSouris",
  },
  Object {
    "displayedName": "De/activate moving the mouse cursor with touches",
    "fullGroupName": "Mouse and touch",
    "type": "TouchSimulateMouse",
  },
  Object {
    "displayedName": "Stop and go back to previous scene",
    "fullGroupName": "Scene",
    "type": "PopScene",
  },
  Object {
    "displayedName": "Pause and start a new scene",
    "fullGroupName": "Scene",
    "type": "PushScene",
  },
  Object {
    "displayedName": "Quit the game",
    "fullGroupName": "Scene",
    "type": "Quit",
  },
  Object {
    "displayedName": "Change the scene",
    "fullGroupName": "Scene",
    "type": "Scene",
  },
  Object {
    "displayedName": "Change background color",
    "fullGroupName": "Scene",
    "type": "SceneBackground",
  },
  Object {
    "displayedName": "Change time scale",
    "fullGroupName": "Timers and time",
    "type": "ChangeTimeScale",
  },
  Object {
    "displayedName": "Pause a timer",
    "fullGroupName": "Timers and time",
    "type": "PauseTimer",
  },
  Object {
    "displayedName": "Delete a timer",
    "fullGroupName": "Timers and time",
    "type": "RemoveTimer",
  },
  Object {
    "displayedName": "Reset a timer",
    "fullGroupName": "Timers and time",
    "type": "ResetTimer",
  },
  Object {
    "displayedName": "Unpause a timer",
    "fullGroupName": "Timers and time",
    "type": "UnPauseTimer",
  },
  Object {
    "displayedName": "Camera center X position",
    "fullGroupName": "Layers and cameras",
    "type": "CameraX",
  },
  Object {
    "displayedName": "Camera center Y position",
    "fullGroupName": "Layers and cameras",
    "type": "CameraY",
  },
  Object {
    "displayedName": "Center the camera on an object",
    "fullGroupName": "Layers and cameras",
    "type": "CentreCamera",
  },
  Object {
    "displayedName": "Change layer time scale",
    "fullGroupName": "Layers and cameras/Time",
    "type": "ChangeLayerTimeScale",
  },
  Object {
    "displayedName": "Center the camera on an object within limits",
    "fullGroupName": "Layers and cameras",
    "type": "FixCamera",
  },
  Object {
    "displayedName": "Hide a layer",
    "fullGroupName": "Layers and cameras",
    "type": "HideLayer",
  },
  Object {
    "displayedName": "Change camera angle",
    "fullGroupName": "Layers and cameras",
    "type": "RotateCamera",
  },
  Object {
    "displayedName": "Effect parameter",
    "fullGroupName": "Layers and cameras/Effects",
    "type": "SetLayerEffectParameter",
  },
  Object {
    "displayedName": "Show a layer",
    "fullGroupName": "Layers and cameras",
    "type": "ShowLayer",
  },
  Object {
    "displayedName": "Change camera zoom.",
    "fullGroupName": "Layers and cameras",
    "type": "ZoomCamera",
  },
  Object {
    "displayedName": "Game global volume",
    "fullGroupName": "Audio",
    "type": "ModGlobalVolume",
  },
  Object {
    "displayedName": "Playing offset of the music on a channel",
    "fullGroupName": "Audio/Music on channels",
    "type": "ModPlayingOffsetMusicChannel",
  },
  Object {
    "displayedName": "Playing offset of the sound on a channel",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "ModPlayingOffsetSoundChannel",
  },
  Object {
    "displayedName": "Volume of the music on a channel",
    "fullGroupName": "Audio/Music on channels",
    "type": "ModVolumeMusicCanal",
  },
  Object {
    "displayedName": "Volume of the sound on a channel",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "ModVolumeSoundCanal",
  },
  Object {
    "displayedName": "Pause the music of a channel",
    "fullGroupName": "Audio/Music on channels",
    "type": "PauseMusicCanal",
  },
  Object {
    "displayedName": "Pause the sound of a channel",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "PauseSoundCanal",
  },
  Object {
    "displayedName": "Play a music file",
    "fullGroupName": "Audio",
    "type": "PlayMusic",
  },
  Object {
    "displayedName": "Play a music file on a channel",
    "fullGroupName": "Audio/Music on channels",
    "type": "PlayMusicCanal",
  },
  Object {
    "displayedName": "Play a sound",
    "fullGroupName": "Audio",
    "type": "PlaySound",
  },
  Object {
    "displayedName": "Play a sound on a channel",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "PlaySoundCanal",
  },
  Object {
    "displayedName": "Play the music of a channel",
    "fullGroupName": "Audio/Music on channels",
    "type": "RePlayMusicCanal",
  },
  Object {
    "displayedName": "Play the sound of a channel",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "RePlaySoundCanal",
  },
  Object {
    "displayedName": "Stop the music on a channel",
    "fullGroupName": "Audio/Music on channels",
    "type": "StopMusicCanal",
  },
  Object {
    "displayedName": "Stop the sound of a channel",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "StopSoundCanal",
  },
  Object {
    "displayedName": "Delete a file",
    "fullGroupName": "Storage",
    "type": "DeleteFichier",
  },
  Object {
    "displayedName": "Delete an element",
    "fullGroupName": "Storage",
    "type": "DeleteGroupFichier",
  },
  Object {
    "displayedName": "Write a value",
    "fullGroupName": "Storage",
    "type": "EcrireFichierExp",
  },
  Object {
    "displayedName": "Write a text",
    "fullGroupName": "Storage",
    "type": "EcrireFichierTxt",
  },
  Object {
    "displayedName": "Open a URL or a file",
    "fullGroupName": "Files",
    "type": "LaunchFile",
  },
  Object {
    "displayedName": "Read a value",
    "fullGroupName": "Storage",
    "type": "LireFichierExp",
  },
  Object {
    "displayedName": "Read a text",
    "fullGroupName": "Storage",
    "type": "LireFichierTxt",
  },
  Object {
    "displayedName": "Load a structured file in memory",
    "fullGroupName": "Storage",
    "type": "LoadFile",
  },
  Object {
    "displayedName": "Close a structured file",
    "fullGroupName": "Storage",
    "type": "UnloadFile",
  },
  Object {
    "displayedName": "Convert JSON to global variable",
    "fullGroupName": "Network",
    "type": "JSONToGlobalVariableStructure",
  },
  Object {
    "displayedName": "Convert JSON to object variable",
    "fullGroupName": "Network",
    "type": "JSONToObjectVariableStructure",
  },
  Object {
    "displayedName": "Convert JSON to a variable",
    "fullGroupName": "Network",
    "type": "JSONToVariableStructure",
  },
  Object {
    "displayedName": "Send a request to a web page",
    "fullGroupName": "Network",
    "type": "SendRequest",
  },
  Object {
    "displayedName": "De/activate fullscreen",
    "fullGroupName": "Game's window",
    "type": "SetFullScreen",
  },
  Object {
    "displayedName": "Change the window's margins",
    "fullGroupName": "Game's window",
    "type": "SetWindowMargins",
  },
  Object {
    "displayedName": "Change the size of the window",
    "fullGroupName": "Game's window",
    "type": "SetWindowSize",
  },
  Object {
    "displayedName": "Change the window's title",
    "fullGroupName": "Game's window",
    "type": "SetWindowTitle",
  },
  Object {
    "displayedName": "Create objects from an external layout",
    "fullGroupName": "External layouts",
    "type": "BuiltinExternalLayouts::CreateObjectsFromExternalLayout",
  },
  Object {
    "displayedName": "Change platform type",
    "fullGroupName": "Platform Behavior/Platforms",
    "type": "PlatformBehavior::ChangePlatformType",
  },
  Object {
    "displayedName": "Acceleration",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::Acceleration",
  },
  Object {
    "displayedName": "Deceleration",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::Deceleration",
  },
  Object {
    "displayedName": "Gravity",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::Gravity",
  },
  Object {
    "displayedName": "Ignore default controls",
    "fullGroupName": "Platform Behavior/Controls",
    "type": "PlatformBehavior::IgnoreDefaultControls",
  },
  Object {
    "displayedName": "Jump speed",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::JumpSpeed",
  },
  Object {
    "displayedName": "Maximum falling speed",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::MaxFallingSpeed",
  },
  Object {
    "displayedName": "Maximum speed",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::MaxSpeed",
  },
  Object {
    "displayedName": "Allow again jumping",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::SetCanJump",
  },
  Object {
    "displayedName": "Simulate control",
    "fullGroupName": "Platform Behavior/Controls",
    "type": "PlatformBehavior::SimulateControl",
  },
  Object {
    "displayedName": "Simulate down key press",
    "fullGroupName": "Platform Behavior/Controls",
    "type": "PlatformBehavior::SimulateDownKey",
  },
  Object {
    "displayedName": "Simulate jump key press",
    "fullGroupName": "Platform Behavior/Controls",
    "type": "PlatformBehavior::SimulateJumpKey",
  },
  Object {
    "displayedName": "Simulate ladder key press",
    "fullGroupName": "Platform Behavior/Controls",
    "type": "PlatformBehavior::SimulateLadderKey",
  },
  Object {
    "displayedName": "Simulate left key press",
    "fullGroupName": "Platform Behavior/Controls",
    "type": "PlatformBehavior::SimulateLeftKey",
  },
  Object {
    "displayedName": "Simulate release key press",
    "fullGroupName": "Platform Behavior/Controls",
    "type": "PlatformBehavior::SimulateReleaseKey",
  },
  Object {
    "displayedName": "Simulate right key press",
    "fullGroupName": "Platform Behavior/Controls",
    "type": "PlatformBehavior::SimulateRightKey",
  },
  Object {
    "displayedName": "Simulate up key press",
    "fullGroupName": "Platform Behavior/Controls",
    "type": "PlatformBehavior::SimulateUpKey",
  },
  Object {
    "displayedName": "Additional border",
    "fullGroupName": "Destroy Outside Screen Behavior/",
    "type": "DestroyOutsideBehavior::ExtraBorder",
  },
  Object {
    "displayedName": "Angle",
    "fullGroupName": "Tiled Sprite Object/Size and angle",
    "type": "TiledSpriteObject::Angle",
  },
  Object {
    "displayedName": "Height",
    "fullGroupName": "Tiled Sprite Object/Size and angle",
    "type": "TiledSpriteObject::Height",
  },
  Object {
    "displayedName": "Width",
    "fullGroupName": "Tiled Sprite Object/Size and angle",
    "type": "TiledSpriteObject::Width",
  },
  Object {
    "displayedName": "Image X Offset",
    "fullGroupName": "Tiled Sprite Object/Image offset",
    "type": "TiledSpriteObject::XOffset",
  },
  Object {
    "displayedName": "Image Y Offset",
    "fullGroupName": "Tiled Sprite Object/Image offset",
    "type": "TiledSpriteObject::YOffset",
  },
  Object {
    "displayedName": "Acceleration",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::Acceleration",
  },
  Object {
    "displayedName": "Diagonals moves",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::AllowDiagonals",
  },
  Object {
    "displayedName": "Rotation offset",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::AngleOffset",
  },
  Object {
    "displayedName": "Angular maximum speed",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::AngularMaxSpeed",
  },
  Object {
    "displayedName": "Deceleration",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::Deceleration",
  },
  Object {
    "displayedName": "Ignore default controls",
    "fullGroupName": "Top-down movement/Controls",
    "type": "TopDownMovementBehavior::IgnoreDefaultControls",
  },
  Object {
    "displayedName": "Maximum speed",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::MaxSpeed",
  },
  Object {
    "displayedName": "Rotate the object",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::RotateObject",
  },
  Object {
    "displayedName": "Simulate control",
    "fullGroupName": "Top-down movement/Controls",
    "type": "TopDownMovementBehavior::SimulateControl",
  },
  Object {
    "displayedName": "Simulate down key press",
    "fullGroupName": "Top-down movement/Controls",
    "type": "TopDownMovementBehavior::SimulateDownKey",
  },
  Object {
    "displayedName": "Simulate left key press",
    "fullGroupName": "Top-down movement/Controls",
    "type": "TopDownMovementBehavior::SimulateLeftKey",
  },
  Object {
    "displayedName": "Simulate right key press",
    "fullGroupName": "Top-down movement/Controls",
    "type": "TopDownMovementBehavior::SimulateRightKey",
  },
  Object {
    "displayedName": "Simulate up key press",
    "fullGroupName": "Top-down movement/Controls",
    "type": "TopDownMovementBehavior::SimulateUpKey",
  },
  Object {
    "displayedName": "Angle",
    "fullGroupName": "Text object/Rotation",
    "type": "TextObject::Angle",
  },
  Object {
    "displayedName": "Color",
    "fullGroupName": "Text object/Effects",
    "type": "TextObject::ChangeColor",
  },
  Object {
    "displayedName": "Opacity",
    "fullGroupName": "Text object/",
    "type": "TextObject::Opacity",
  },
  Object {
    "displayedName": "Bold",
    "fullGroupName": "Text object/Style",
    "type": "TextObject::SetBold",
  },
  Object {
    "displayedName": "Italic",
    "fullGroupName": "Text object/Style",
    "type": "TextObject::SetItalic",
  },
  Object {
    "displayedName": "Size",
    "fullGroupName": "Text object/",
    "type": "TextObject::Size",
  },
  Object {
    "displayedName": "Modify the text",
    "fullGroupName": "Text object/",
    "type": "TextObject::String",
  },
  Object {
    "displayedName": "Hide banner ad",
    "fullGroupName": "AdMob banners and interstitial screens/Banner",
    "type": "AdMobObject::HideBanner",
  },
  Object {
    "displayedName": "Preload interstitial screen",
    "fullGroupName": "AdMob banners and interstitial screens/Interstitial screen",
    "type": "AdMobObject::PreloadInterstitial",
  },
  Object {
    "displayedName": "Show banner ad",
    "fullGroupName": "AdMob banners and interstitial screens/Banner",
    "type": "AdMobObject::ShowBanner",
  },
  Object {
    "displayedName": "Show interstitial screen",
    "fullGroupName": "AdMob banners and interstitial screens/Interstitial screen",
    "type": "AdMobObject::ShowInterstitial",
  },
  Object {
    "displayedName": "Height",
    "fullGroupName": "Panel Sprite (9-patch) Object/Size and angle",
    "type": "PanelSpriteObject::Height",
  },
  Object {
    "displayedName": "Image name",
    "fullGroupName": "Panel Sprite (9-patch) Object/Image",
    "type": "PanelSpriteObject::Image",
  },
  Object {
    "displayedName": "Width",
    "fullGroupName": "Panel Sprite (9-patch) Object/Size and angle",
    "type": "PanelSpriteObject::Width",
  },
  Object {
    "displayedName": "Circle",
    "fullGroupName": "Primitive drawing/Drawing",
    "type": "PrimitiveDrawing::Circle",
  },
  Object {
    "displayedName": "Fill color",
    "fullGroupName": "Primitive drawing/Setup",
    "type": "PrimitiveDrawing::FillColor",
  },
  Object {
    "displayedName": "Fill opacity",
    "fullGroupName": "Primitive drawing/Setup",
    "type": "PrimitiveDrawing::FillOpacity",
  },
  Object {
    "displayedName": "Line",
    "fullGroupName": "Primitive drawing/Drawing",
    "type": "PrimitiveDrawing::Line",
  },
  Object {
    "displayedName": "Outline color",
    "fullGroupName": "Primitive drawing/Setup",
    "type": "PrimitiveDrawing::OutlineColor",
  },
  Object {
    "displayedName": "Outline opacity",
    "fullGroupName": "Primitive drawing/Setup",
    "type": "PrimitiveDrawing::OutlineOpacity",
  },
  Object {
    "displayedName": "Outline size",
    "fullGroupName": "Primitive drawing/Setup",
    "type": "PrimitiveDrawing::OutlineSize",
  },
  Object {
    "displayedName": "Rectangle",
    "fullGroupName": "Primitive drawing/Drawing",
    "type": "PrimitiveDrawing::Rectangle",
  },
  Object {
    "displayedName": "De/activate capturing text input",
    "fullGroupName": "Text entry object/Setup",
    "type": "TextEntryObject::Activate",
  },
  Object {
    "displayedName": "Text in memory",
    "fullGroupName": "Text entry object/",
    "type": "TextEntryObject::String",
  },
  Object {
    "displayedName": "Add an item",
    "fullGroupName": "Inventories",
    "type": "Inventory::Add",
  },
  Object {
    "displayedName": "Equip an item",
    "fullGroupName": "Inventories",
    "type": "Inventory::Equip",
  },
  Object {
    "displayedName": "Remove an item",
    "fullGroupName": "Inventories",
    "type": "Inventory::Remove",
  },
  Object {
    "displayedName": "Save an inventory in a variable",
    "fullGroupName": "Inventories/Variables",
    "type": "Inventory::SerializeToVariable",
  },
  Object {
    "displayedName": "Set a maximum count for an item",
    "fullGroupName": "Inventories",
    "type": "Inventory::SetMaximum",
  },
  Object {
    "displayedName": "Set unlimited count for an item",
    "fullGroupName": "Inventories",
    "type": "Inventory::SetUnlimited",
  },
  Object {
    "displayedName": "Load an inventory from a variable",
    "fullGroupName": "Inventories/Variables",
    "type": "Inventory::UnserializeFromVariable",
  },
  Object {
    "displayedName": "Link two objects",
    "fullGroupName": "Linked objects",
    "type": "LinkedObjects::LinkObjects",
  },
  Object {
    "displayedName": "Take into account linked objects",
    "fullGroupName": "Linked objects",
    "type": "LinkedObjects::PickObjectsLinkedTo",
  },
  Object {
    "displayedName": "Unlink all objects from an object",
    "fullGroupName": "Linked objects",
    "type": "LinkedObjects::RemoveAllLinksOf",
  },
  Object {
    "displayedName": "Unlink two objects",
    "fullGroupName": "Linked objects",
    "type": "LinkedObjects::RemoveLinkBetween",
  },
  Object {
    "displayedName": "Initialize a shop",
    "fullGroupName": "Shopify",
    "type": "Shopify::BuildClient",
  },
  Object {
    "displayedName": "Get the URL for buying a product",
    "fullGroupName": "Shopify",
    "type": "Shopify::GetCheckoutUrlForProduct",
  },
]
`;

exports[`EnumerateInstructions can enumerate instructions being conditions 1`] = `
Array [
  Object {
    "displayedName": "Pick a random object",
    "fullGroupName": "Common conditions for all objects/Objects",
    "type": "AjoutHasard",
  },
  Object {
    "displayedName": "Pick all objects",
    "fullGroupName": "Common conditions for all objects/Objects",
    "type": "AjoutObjConcern",
  },
  Object {
    "displayedName": "Collision",
    "fullGroupName": "Common conditions for all objects/Collision",
    "type": "CollisionNP",
  },
  Object {
    "displayedName": "Distance between two objects",
    "fullGroupName": "Common conditions for all objects/Position",
    "type": "Distance",
  },
  Object {
    "displayedName": "An object is turned toward another",
    "fullGroupName": "Common conditions for all objects/Angle",
    "type": "EstTourne",
  },
  Object {
    "displayedName": "Objects count",
    "fullGroupName": "Common conditions for all objects/Objects",
    "type": "NbObjet",
  },
  Object {
    "displayedName": "Pick nearest object",
    "fullGroupName": "Common conditions for all objects/Objects",
    "type": "PickNearest",
  },
  Object {
    "displayedName": "An object is moving toward another",
    "fullGroupName": "Common conditions for all objects/Movement",
    "type": "SeDirige",
  },
  Object {
    "displayedName": "Angle",
    "fullGroupName": "Common conditions for all objects/Angle",
    "type": "Angle",
  },
  Object {
    "displayedName": "Angle of movement",
    "fullGroupName": "Common conditions for all objects/Movement",
    "type": "AngleOfDisplacement",
  },
  Object {
    "displayedName": "Object is stopped",
    "fullGroupName": "Common conditions for all objects/Movement",
    "type": "Arret",
  },
  Object {
    "displayedName": "Behavior activated",
    "fullGroupName": "Common conditions for all objects/Behaviors",
    "type": "BehaviorActivated",
  },
  Object {
    "displayedName": "Point inside object",
    "fullGroupName": "Common conditions for all objects/Collision",
    "type": "CollisionPoint",
  },
  Object {
    "displayedName": "Compare layer",
    "fullGroupName": "Common conditions for all objects/Layer",
    "type": "Layer",
  },
  Object {
    "displayedName": "Child existence",
    "fullGroupName": "Common conditions for all objects/Variables/Structures",
    "type": "ObjectVariableChildExists",
  },
  Object {
    "displayedName": "Compare Z order",
    "fullGroupName": "Common conditions for all objects/Z order",
    "type": "Plan",
  },
  Object {
    "displayedName": "Compare X position of an object",
    "fullGroupName": "Common conditions for all objects/Position",
    "type": "PosX",
  },
  Object {
    "displayedName": "Compare Y position of an object",
    "fullGroupName": "Common conditions for all objects/Position",
    "type": "PosY",
  },
  Object {
    "displayedName": "Value of an object's variable",
    "fullGroupName": "Common conditions for all objects/Variables",
    "type": "VarObjet",
  },
  Object {
    "displayedName": "Text of an object's variable",
    "fullGroupName": "Common conditions for all objects/Variables",
    "type": "VarObjetTxt",
  },
  Object {
    "displayedName": "Visibility of an object",
    "fullGroupName": "Common conditions for all objects/Visibility",
    "type": "Visible",
  },
  Object {
    "displayedName": "Speed",
    "fullGroupName": "Common conditions for all objects/Movement",
    "type": "Vitesse",
  },
  Object {
    "displayedName": "Collision (Pixel perfect)",
    "fullGroupName": "Sprite/Collision",
    "type": "Collision",
  },
  Object {
    "displayedName": "Animation paused",
    "fullGroupName": "Sprite/Animations and images",
    "type": "AnimStopped",
  },
  Object {
    "displayedName": "Current animation",
    "fullGroupName": "Sprite/Animations and images",
    "type": "Animation",
  },
  Object {
    "displayedName": "Animation finished",
    "fullGroupName": "Sprite/Animations and images",
    "type": "AnimationEnded",
  },
  Object {
    "displayedName": "Current animation name",
    "fullGroupName": "Sprite/Animations and images",
    "type": "AnimationName",
  },
  Object {
    "displayedName": "Blend mode",
    "fullGroupName": "Sprite/Effects",
    "type": "BlendMode",
  },
  Object {
    "displayedName": "Current direction",
    "fullGroupName": "Sprite/Direction",
    "type": "Direction",
  },
  Object {
    "displayedName": "Horizontally flipped",
    "fullGroupName": "Sprite/Effects",
    "type": "FlippedX",
  },
  Object {
    "displayedName": "Vertically flipped",
    "fullGroupName": "Sprite/Effects",
    "type": "FlippedY",
  },
  Object {
    "displayedName": "Opacity",
    "fullGroupName": "Sprite/Visibility",
    "type": "Opacity",
  },
  Object {
    "displayedName": "Scale on Y axis",
    "fullGroupName": "Sprite/Size",
    "type": "ScaleHeight",
  },
  Object {
    "displayedName": "Scale on X axis",
    "fullGroupName": "Sprite/Size",
    "type": "ScaleWidth",
  },
  Object {
    "displayedName": "Current frame",
    "fullGroupName": "Sprite/Animations and images",
    "type": "Sprite",
  },
  Object {
    "displayedName": "And",
    "fullGroupName": "Advanced",
    "type": "BuiltinCommonInstructions::And",
  },
  Object {
    "displayedName": "Not",
    "fullGroupName": "Advanced",
    "type": "BuiltinCommonInstructions::Not",
  },
  Object {
    "displayedName": "Trigger once while true",
    "fullGroupName": "Advanced",
    "type": "BuiltinCommonInstructions::Once",
  },
  Object {
    "displayedName": "Or",
    "fullGroupName": "Advanced",
    "type": "BuiltinCommonInstructions::Or",
  },
  Object {
    "displayedName": "Child existence",
    "fullGroupName": "Variables/Global variables/Structures",
    "type": "GlobalVariableChildExists",
  },
  Object {
    "displayedName": "Value of a global variable",
    "fullGroupName": "Variables/Global variables",
    "type": "VarGlobal",
  },
  Object {
    "displayedName": "Text of a global variable",
    "fullGroupName": "Variables/Global variables",
    "type": "VarGlobalTxt",
  },
  Object {
    "displayedName": "Value of a variable",
    "fullGroupName": "Variables",
    "type": "VarScene",
  },
  Object {
    "displayedName": "Text of a variable",
    "fullGroupName": "Variables",
    "type": "VarSceneTxt",
  },
  Object {
    "displayedName": "Child existence",
    "fullGroupName": "Variables/Structures",
    "type": "VariableChildExists",
  },
  Object {
    "displayedName": "Mouse button released",
    "fullGroupName": "Mouse and touch",
    "type": "MouseButtonReleased",
  },
  Object {
    "displayedName": "A touch has ended",
    "fullGroupName": "Mouse and touch/Multitouch",
    "type": "PopEndedTouch",
  },
  Object {
    "displayedName": "A new touch has started",
    "fullGroupName": "Mouse and touch/Multitouch",
    "type": "PopStartedTouch",
  },
  Object {
    "displayedName": "Mouse button pressed or touch held",
    "fullGroupName": "Mouse and touch",
    "type": "SourisBouton",
  },
  Object {
    "displayedName": "The cursor/touch is on an object",
    "fullGroupName": "Mouse and touch",
    "type": "SourisSurObjet",
  },
  Object {
    "displayedName": "Cursor X position",
    "fullGroupName": "Mouse and touch",
    "type": "SourisX",
  },
  Object {
    "displayedName": "Cursor Y position",
    "fullGroupName": "Mouse and touch",
    "type": "SourisY",
  },
  Object {
    "displayedName": "Touch X position",
    "fullGroupName": "Mouse and touch/Multitouch",
    "type": "TouchX",
  },
  Object {
    "displayedName": "Touch Y position",
    "fullGroupName": "Mouse and touch/Multitouch",
    "type": "TouchY",
  },
  Object {
    "displayedName": "Any key pressed",
    "fullGroupName": "Keyboard",
    "type": "AnyKeyPressed",
  },
  Object {
    "displayedName": "Key pressed (text expression)",
    "fullGroupName": "Keyboard",
    "type": "KeyFromTextPressed",
  },
  Object {
    "displayedName": "Key released (text expression)",
    "fullGroupName": "Keyboard",
    "type": "KeyFromTextReleased",
  },
  Object {
    "displayedName": "Key pressed",
    "fullGroupName": "Keyboard",
    "type": "KeyPressed",
  },
  Object {
    "displayedName": "Key released",
    "fullGroupName": "Keyboard",
    "type": "KeyReleased",
  },
  Object {
    "displayedName": "At the beginning of the scene",
    "fullGroupName": "Scene",
    "type": "DepartScene",
  },
  Object {
    "displayedName": "Compare two expressions",
    "fullGroupName": "Other",
    "type": "Egal",
  },
  Object {
    "displayedName": "Time scale",
    "fullGroupName": "Timers and time",
    "type": "TimeScale",
  },
  Object {
    "displayedName": "Value of a timer",
    "fullGroupName": "Timers and time",
    "type": "Timer",
  },
  Object {
    "displayedName": "State of a timer",
    "fullGroupName": "Timers and time",
    "type": "TimerPaused",
  },
  Object {
    "displayedName": "Angle of a camera of a layer",
    "fullGroupName": "Layers and cameras",
    "type": "CameraAngle",
  },
  Object {
    "displayedName": "Height of a camera",
    "fullGroupName": "Layers and cameras",
    "type": "CameraHeight",
  },
  Object {
    "displayedName": "Width of a camera",
    "fullGroupName": "Layers and cameras",
    "type": "CameraWidth",
  },
  Object {
    "displayedName": "Camera center X position",
    "fullGroupName": "Layers and cameras",
    "type": "CameraX",
  },
  Object {
    "displayedName": "Camera center Y position",
    "fullGroupName": "Layers and cameras",
    "type": "CameraY",
  },
  Object {
    "displayedName": "Layer time scale",
    "fullGroupName": "Layers and cameras/Time",
    "type": "LayerTimeScale",
  },
  Object {
    "displayedName": "Visibility of a layer",
    "fullGroupName": "Layers and cameras",
    "type": "LayerVisible",
  },
  Object {
    "displayedName": "Global volume",
    "fullGroupName": "Audio",
    "type": "GlobalVolume",
  },
  Object {
    "displayedName": "Volume of the music on a channel",
    "fullGroupName": "Audio/Music on channels",
    "type": "MusicCanalVolume",
  },
  Object {
    "displayedName": "Pitch of the music on a channel",
    "fullGroupName": "Audio/Music on channels",
    "type": "MusicChannelPitch",
  },
  Object {
    "displayedName": "Playing offset of the music on a channel",
    "fullGroupName": "Audio/Music on channels",
    "type": "MusicChannelPlayingOffset",
  },
  Object {
    "displayedName": "A music file is paused",
    "fullGroupName": "Audio/Music on channels",
    "type": "MusicPaused",
  },
  Object {
    "displayedName": "A music file is being played",
    "fullGroupName": "Audio/Music on channels",
    "type": "MusicPlaying",
  },
  Object {
    "displayedName": "A music file is stopped",
    "fullGroupName": "Audio/Music on channels",
    "type": "MusicStopped",
  },
  Object {
    "displayedName": "Volume of the sound on a channel",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "SoundCanalVolume",
  },
  Object {
    "displayedName": "Pitch of the sound of a channel",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "SoundChannelPitch",
  },
  Object {
    "displayedName": "Playing offset of the sound on a channel",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "SoundChannelPlayingOffset",
  },
  Object {
    "displayedName": "A sound is paused",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "SoundPaused",
  },
  Object {
    "displayedName": "A sound is being played",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "SoundPlaying",
  },
  Object {
    "displayedName": "A sound is stopped",
    "fullGroupName": "Audio/Sounds on channels",
    "type": "SoundStopped",
  },
  Object {
    "displayedName": "Existence of a group",
    "fullGroupName": "Storage",
    "type": "GroupExists",
  },
  Object {
    "displayedName": "Always",
    "fullGroupName": "Other",
    "type": "Toujours",
  },
  Object {
    "displayedName": "Acceleration",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::Acceleration",
  },
  Object {
    "displayedName": "Deceleration",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::Deceleration",
  },
  Object {
    "displayedName": "Gravity",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::Gravity",
  },
  Object {
    "displayedName": "Is falling",
    "fullGroupName": "Platform Behavior/",
    "type": "PlatformBehavior::IsFalling",
  },
  Object {
    "displayedName": "Is grabbing platform ledge",
    "fullGroupName": "Platform Behavior/",
    "type": "PlatformBehavior::IsGrabbingPlatform",
  },
  Object {
    "displayedName": "Is jumping",
    "fullGroupName": "Platform Behavior/",
    "type": "PlatformBehavior::IsJumping",
  },
  Object {
    "displayedName": "Is moving",
    "fullGroupName": "Platform Behavior/",
    "type": "PlatformBehavior::IsMoving",
  },
  Object {
    "displayedName": "Is on floor",
    "fullGroupName": "Platform Behavior/",
    "type": "PlatformBehavior::IsOnFloor",
  },
  Object {
    "displayedName": "Is on ladder",
    "fullGroupName": "Platform Behavior/",
    "type": "PlatformBehavior::IsOnLadder",
  },
  Object {
    "displayedName": "Jump speed",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::JumpSpeed",
  },
  Object {
    "displayedName": "Maximum falling speed",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::MaxFallingSpeed",
  },
  Object {
    "displayedName": "Maximum speed",
    "fullGroupName": "Platform Behavior/Options",
    "type": "PlatformBehavior::MaxSpeed",
  },
  Object {
    "displayedName": "Additional border",
    "fullGroupName": "Destroy Outside Screen Behavior/",
    "type": "DestroyOutsideBehavior::ExtraBorder",
  },
  Object {
    "displayedName": "Height",
    "fullGroupName": "Tiled Sprite Object/Size and angle",
    "type": "TiledSpriteObject::Height",
  },
  Object {
    "displayedName": "Width",
    "fullGroupName": "Tiled Sprite Object/Size and angle",
    "type": "TiledSpriteObject::Width",
  },
  Object {
    "displayedName": "Image X Offset",
    "fullGroupName": "Tiled Sprite Object/Image offset",
    "type": "TiledSpriteObject::XOffset",
  },
  Object {
    "displayedName": "Image Y Offset",
    "fullGroupName": "Tiled Sprite Object/Image offset",
    "type": "TiledSpriteObject::YOffset",
  },
  Object {
    "displayedName": "Being dragged",
    "fullGroupName": "Draggable Behavior/",
    "type": "DraggableBehavior::Dragged",
  },
  Object {
    "displayedName": "Acceleration",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::Acceleration",
  },
  Object {
    "displayedName": "Rotation offset",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::AngleOffset",
  },
  Object {
    "displayedName": "Angular maximum speed",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::AngularMaxSpeed",
  },
  Object {
    "displayedName": "Deceleration",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::Deceleration",
  },
  Object {
    "displayedName": "Diagonals moves",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::DiagonalsAllowed",
  },
  Object {
    "displayedName": "Is moving",
    "fullGroupName": "Top-down movement/",
    "type": "TopDownMovementBehavior::IsMoving",
  },
  Object {
    "displayedName": "Maximum speed",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::MaxSpeed",
  },
  Object {
    "displayedName": "Object rotated",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::ObjectRotated",
  },
  Object {
    "displayedName": "Speed",
    "fullGroupName": "Top-down movement/Movement",
    "type": "TopDownMovementBehavior::Speed",
  },
  Object {
    "displayedName": "Angle",
    "fullGroupName": "Text object/Rotation",
    "type": "TextObject::Angle",
  },
  Object {
    "displayedName": "Bold",
    "fullGroupName": "Text object/Style",
    "type": "TextObject::IsBold",
  },
  Object {
    "displayedName": "Italic",
    "fullGroupName": "Text object/Style",
    "type": "TextObject::IsItalic",
  },
  Object {
    "displayedName": "Opacity",
    "fullGroupName": "Text object/",
    "type": "TextObject::Opacity",
  },
  Object {
    "displayedName": "Size",
    "fullGroupName": "Text object/",
    "type": "TextObject::Size",
  },
  Object {
    "displayedName": "Compare the text",
    "fullGroupName": "Text object/",
    "type": "TextObject::String",
  },
  Object {
    "displayedName": "Banner is displayed",
    "fullGroupName": "AdMob banners and interstitial screens/",
    "type": "AdMobObject::BannerDisplayed",
  },
  Object {
    "displayedName": "Interstitial screen is ready",
    "fullGroupName": "AdMob banners and interstitial screens/",
    "type": "AdMobObject::InterstitialReady",
  },
  Object {
    "displayedName": "Height",
    "fullGroupName": "Panel Sprite (9-patch) Object/Size and angle",
    "type": "PanelSpriteObject::Height",
  },
  Object {
    "displayedName": "Width",
    "fullGroupName": "Panel Sprite (9-patch) Object/Size and angle",
    "type": "PanelSpriteObject::Width",
  },
  Object {
    "displayedName": "Fill opacity",
    "fullGroupName": "Primitive drawing/Setup",
    "type": "PrimitiveDrawing::FillOpacity",
  },
  Object {
    "displayedName": "Outline opacity",
    "fullGroupName": "Primitive drawing/Setup",
    "type": "PrimitiveDrawing::OutlineOpacity",
  },
  Object {
    "displayedName": "Outline size",
    "fullGroupName": "Primitive drawing/Setup",
    "type": "PrimitiveDrawing::OutlineSize",
  },
  Object {
    "displayedName": "Text input",
    "fullGroupName": "Text entry object/Setup",
    "type": "TextEntryObject::Activated",
  },
  Object {
    "displayedName": "Text in memory",
    "fullGroupName": "Text entry object/",
    "type": "TextEntryObject::String",
  },
  Object {
    "displayedName": "Item count",
    "fullGroupName": "Inventories",
    "type": "Inventory::Count",
  },
  Object {
    "displayedName": "Has an item",
    "fullGroupName": "Inventories",
    "type": "Inventory::Has",
  },
  Object {
    "displayedName": "Item equipped",
    "fullGroupName": "Inventories",
    "type": "Inventory::IsEquipped",
  },
  Object {
    "displayedName": "Item full",
    "fullGroupName": "Inventories",
    "type": "Inventory::IsFull",
  },
  Object {
    "displayedName": "Take into account linked objects",
    "fullGroupName": "Linked objects",
    "type": "LinkedObjects::PickObjectsLinkedTo",
  },
  Object {
    "displayedName": "Is a mobile device",
    "fullGroupName": "System information",
    "type": "SystemInfo::IsMobile",
  },
]
`;
